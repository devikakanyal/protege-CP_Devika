class Solution {
public:



    int f( vector<int> & arr )
    {
        int n= arr.size();
        vector<int> dp( n );

        dp[0]=arr[0];

        for( int i=1; i< n ; i++)
        {
            int pick= arr[i];
            if( i>1)  pick += dp[i-2];

            int not_pick=dp[i-1];

            dp[i]= max( pick , not_pick);
        }

        return dp[n-1];

    }

    int rob(vector<int>& nums) {

        vector<int> temp1 , temp2;
        int n=nums.size();

        if( n==1) return nums[0];

        for( int i=0 ; i< n ; i++)
        {
            if( i !=0 ) temp2.push_back( nums[i]);

            if( i!= n-1) temp1.push_back( nums[i]);
        }

        return max( f( temp1), f(temp2));
        
    }
};
